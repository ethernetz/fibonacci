version: "3.8"
services:
  postgres:
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=postgres_password
  redis:
    image: 'redis:latest'
  nginx:
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./nginx
    ports:
      - '3050:80'
  api:
    depends_on:
      aws-localstack:
        condition: service_healthy
    build:
      dockerfile: Dockerfile.dev
      context: ./api
    volumes:
      - ./api:/home/node/app
      - ./.aws:/home/node/.aws
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
      - AWS_endpoint=http://aws-localstack:4566
      - AWS_region=us-east-1
  worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./worker
    volumes:
      - /home/node/app/node_modules
      - ./worker:/home/node/app
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /home/node/app/node_modules
      - ./client:/home/node/app
    environment:
      - WDS_SOCKET_PORT=0
  client-tests:
    build:
      dockerfile: Dockerfile.test
      context: ./client
    environment:
      - CI
    volumes:
      - /home/node/app/node_modules
      - ./client:/home/node/app
  aws-localstack:
    image: localstack/localstack:latest
    environment:
      - DEBUG=1
      - SERVICES=secretsmanager
    ports:
      - "4566:4566"
      - '8055:8080'
    volumes:
      - "./aws-localstack/init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh" # ready hook
      - /var/run/docker.sock:/var/run/docker.sock
